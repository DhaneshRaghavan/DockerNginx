name: CI

on:
  push:
    branches: [main]

jobs:
  Compile:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Lint Check
        run: docker run --rm -i hadolint/hadolint:v2.3.0-alpine < Dockerfile
  Build:
    needs: Compile
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name : Set output vars
        id: vars  
        run: |
            echo BUILD_NUMBER=$(date '+%Y%H%M%S') >> $GITHUB_ENV
            echo VERSION=$(cat ./version.sh) >> $GITHUB_ENV
      - name: Build Image
        run: |
          VERSION=$(cat ./version.sh)
          docker build . --file Dockerfile --tag 260199123017.dkr.ecr.ap-south-1.amazonaws.com/docker_nginx:${{ env.VERSION }}.${{ env.BUILD_NUMBER }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: docker_nginx
        run: docker push  $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.VERSION }}.${{ env.BUILD_NUMBER }}
      - name: Add tag
        run: |
          git config --local user.email "github-actions@alation.com"
          git config --local user.name "github-actions"
          git tag -a ${{ env.VERSION }}.${{ env.BUILD_NUMBER }} -m "Updating new tag version"
          git push origin --tags 
    


